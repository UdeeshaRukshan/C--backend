public string ApplyLeave(string leaveType, DateTime leaveStartDate, DateTime leaveEndDate)
{
    if (leaveStartDate > leaveEndDate)
    {
        return "End date must be after start date.";
    }

    // Check leave balance before proceeding
    if (!CheckLeaveBalance(leaveType))
    {
        return $"Insufficient {leaveType.ToLower()} leave balance.";
    }

    // Ensure annual leave is applied 7 days in advance
    if (leaveType == "Annual" && (leaveStartDate - DateTime.Now).Days < 7)
    {
        return "Annual leave must be applied at least 7 days in advance.";
    }

    string query = @"
    INSERT INTO LeaveRequest (EmployeeID, LeaveType, LeaveStartDate, LeaveEndDate, LeaveDuration, LeaveDate, Status) 
    VALUES (@EmployeeID, @LeaveType, @StartDate, @EndDate, @Duration, @LeaveDate, @Status);";

    try
    {
        using (MySqlConnection connection = new MySqlConnection(connectionString))
        {
            connection.Open();

            MySqlCommand command = new MySqlCommand(query, connection);

            // Calculate leave duration in days
            int duration = (leaveEndDate - leaveStartDate).Days; // Include the start date

            // Add parameters
            command.Parameters.AddWithValue("@EmployeeID", 1);
            command.Parameters.AddWithValue("@LeaveType", leaveType);
            command.Parameters.AddWithValue("@StartDate", leaveStartDate);
            command.Parameters.AddWithValue("@EndDate", leaveEndDate);
            command.Parameters.AddWithValue("@LeaveDate", leaveStartDate);
            command.Parameters.AddWithValue("@Duration", duration);
            command.Parameters.AddWithValue("@Status", "Pending");

            // Execute the query
            int rowsAffected = command.ExecuteNonQuery();

            if (rowsAffected == 0)
            {
                return "Failed to apply leave. Please try again.";
            }

            // Retrieve the auto-generated LeaveID
            command.CommandText = "SELECT LAST_INSERT_ID();";
            object result = command.ExecuteScalar();
            if (result == null || !int.TryParse(result.ToString(), out int leaveID))
            {
                return "Failed to retrieve leave ID. Please try again.";
            }

            // Update leave balance in the database
            UpdateLeaveBalance(leaveType,duration);

            // Add the leave request to the employee's LeaveRequests list
            LeaveRequests.Add(new LeaveRequest(this, leaveType, leaveStartDate, leaveEndDate, "Pending"));

            return $"{leaveType} leave applied successfully. Leave ID: {leaveID}";
        }
    }
    catch (Exception ex)
    {
        // Log the exception
        Console.WriteLine($"Error applying leave: {ex.Message}");
        return $"Error applying leave: {ex.Message}";
    }
}
// Method to apply leave
 public void UpdateLeaveBalance(string leaveType,int duration)
    {
        string updateQuery = "";
        int newBalance = duration;

        if (leaveType == "Casual")
        {
           
            newBalance = CasualLeaveBalance-duration;
            updateQuery = "UPDATE Employees SET CasualLeaveBalance = @NewBalance WHERE id = @EmployeeID";
        }
        else if (leaveType == "Annual")
        {
        
            newBalance = AnnualLeaveBalance-duration;
            updateQuery = "UPDATE Employees SET AnnualLeaveBalance = @NewBalance WHERE id = @EmployeeID";
        }
        else if (leaveType == "Short")
        {
            
            newBalance = ShortLeaveBalance-duration;
            updateQuery = "UPDATE Employees SET ShortLeaveBalance = @NewBalance WHERE id = @EmployeeID";
        }

        if (!string.IsNullOrEmpty(updateQuery))
        {
            try
            {
                using (MySqlConnection connection = new MySqlConnection(connectionString))
                {
                    connection.Open();

                    MySqlCommand command = new MySqlCommand(updateQuery, connection);
                    command.Parameters.AddWithValue("@NewBalance", newBalance);
                    command.Parameters.AddWithValue("@EmployeeID", 1); 

                    int rowsAffected = command.ExecuteNonQuery();
                    if (rowsAffected == 0)
                    {
                        Console.WriteLine("Failed to update leave balance in the database.");
                    }
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error updating leave balance in the database: {ex.Message}");
            }
        }
    }
public bool CheckLeaveBalance(string leaveType)
{
    if (leaveType == "Casual" && CasualLeaveBalance >= 0)
        return true;
    if (leaveType == "Annual" && AnnualLeaveBalance >= 0)
        return true;
    if (leaveType == "Short" && ShortLeaveBalance >= 0)
        return true;

    return false;
}